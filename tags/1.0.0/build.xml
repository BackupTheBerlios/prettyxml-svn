<?xml version="1.0" encoding="UTF-8"?>
<project name="prettyxml" default="help" basedir=".">

  <property name="version" value="1.0.0"/>
  <property name="name" value="prettyxml"/>

  <property name="build.dir" location="build"/>
  <property name="build.dest" location="build/classes"/>
  <property name="build.test" location="build/test"/>
  <property name="build.javadocs" location="build/apidocs"/>
  <property name="src.dir" location="src"/>
  <property name="test.dir" location="test"/>
  <property name="tmp.dir" location="tmp"/>
  <property name="samples.dir" location="samples"/>
  <property name="lib.dir" location="lib"/>

  <property environment="env"/>
  <property name="distfile" location="${build.dir}/${name}-${version}.zip"/>

  <path id="compile.class.path">
    <pathelement location="${lib.dir}/jdom-1.0.jar"/>
    <pathelement location="${lib.dir}/commons-cli-1.0.jar"/>
    <pathelement location="${lib.dir}/commons-io-1.0.jar"/>
  </path>

  <path id="run.class.path">
    <pathelement location="${lib.dir}/${name}.jar"/>
    <path refid="compile.class.path"/>
  </path>

  <path id="test.class.path">
    <pathelement location="${build.test}"/>
    <path refid="run.class.path"/>
  </path>

  <target name="init">
    <tstamp/>
  </target>

  <target name="help">
    <echo message="Build of prettyxml ${version}"/>
    <echo message="use ant -p to see targets with ant 1.6+"/>
  </target>

  <target name="check.jdk">
    <condition property="ant.java.version.checked">
      <contains substring="1.4" string="${ant.java.version}"/>
    </condition>
    <fail message="build needs jdk 1.4 - have ${ant.java.version}" unless="ant.java.version.checked"/>
  </target>

  <target name="prepare" depends="init">
    <mkdir dir="${build.dest}"/>
  </target>

  <target name="compile" depends="check.jdk,prepare" description="Compiles the source code">
    <javac srcdir="${src.dir}" destdir="${build.dest}">
      <classpath refid="compile.class.path"/>
    </javac>
    <echo message="version = ${version}" file="${build.dest}/prettyxml.properties"/>
    <copy file="${samples.dir}/sort-attributes.xslt" todir="${build.dest}" preservelastmodified="true"/>
    <copy file="${samples.dir}/sort-elements.xslt" todir="${build.dest}" preservelastmodified="true"/>
  </target>

  <target name="jar" depends="compile" description="Creates the class package">
    <jar jarfile="${lib.dir}/${name}.jar" basedir="${build.dest}">
      <metainf file="LICENSE.txt"/>
      <manifest>
        <attribute name="Main-Class" value="dk.hippogrif.prettyxml.Main"/>
        <section name="dk/hippogrif/prettyxml">
          <attribute name="Implementation-Title" value="prettyxml"/>
          <attribute name="Implementation-Version" value="${version}"/> 
          <attribute name="Implementation-Vendor" value="Jesper Goertz"/>
          <attribute name="Implementation-Vendor-Id" value="http://hippogrif.dk/sw/prettyxml"/>
        </section>
      </manifest>
    </jar>
  </target>

  <target name="javadoc" depends="prepare" description="Creates the API documentation">
    <mkdir dir="${build.javadocs}"/>
    <javadoc packagenames="dk.hippogrif.prettyxml"
             sourcepath="${src.dir}"
             destdir="${build.javadocs}"
             link="http://jdom.org/docs/apidocs"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="${name} v${version}"
             doctitle="${name} v${version}&lt;br&gt;API Specification"
             header="&lt;b&gt;${name}&lt;br&gt;&lt;font size='-1'&gt;${version}&lt;/font&gt;&lt;/b&gt;"
             bottom="Copyright &#169; 2005 Jesper Goertz. All Rights Reserved.">
      <classpath refid="run.class.path"/>
    </javadoc>
  </target>

  <target name="dist" depends="jar,javadoc" description="Creates the distribution package">
    <delete file="${distfile}*"/>
    <zip destfile="${distfile}">
      <fileset dir="${basedir}">
        <include name="HISTORY.txt"/>
        <include name="README.txt"/>
        <include name="LICENSE.txt"/>
        <include name="prettyxml.bat"/>
        <include name="prettyxml"/>
        <include name="samples/**/*"/>
      </fileset>
      <zipfileset dir="${lib.dir}" prefix="lib">
        <include name="jdom-1.0.jar"/>
        <include name="commons-cli-1.0.jar"/>
        <include name="commons-io-1.0.jar"/>
        <include name="${name}.jar"/>
      </zipfileset>
      <fileset dir="${build.dir}" includes="apidocs/**/*"/>
    </zip>
    <checksum file="${distfile}"/>
  </target>

  <target name="verify" description="verifies checksum on distribution file">
    <checksum file="${distfile}" verifyProperty="isMD5ok"/>
    <condition property="checksum.failed">
      <isfalse value="${isMD5ok}"/>
    </condition>
    <fail message="checksum failed" if="checksum.failed"/>
  </target>

  <target name="clean" depends="init" description="Removes build files">
    <delete dir="${build.dir}"/>
    <delete dir="${tmp.dir}"/>
    <delete file="${lib.dir}/${name}.jar"/>
  </target>

  <target name="run" description="Runs program with arguments from -Dargs=">
    <java classname="dk.hippogrif.prettyxml.Main" classpathref="run.class.path">
      <arg line="${args}"/>
    </java>
  </target>

  <target name="version" description="Runs program and displays version">
    <java classname="dk.hippogrif.prettyxml.Main" classpathref="run.class.path">
      <arg value="-v"/>
    </java>
  </target>

  <target name="compile.test" depends="prepare" description="Compiles the test code">
    <mkdir dir="${build.test}"/>
    <javac srcdir="${test.dir}" destdir="${build.test}" debug="true">
      <classpath refid="run.class.path"/>
    </javac>
  </target>

  <target name="test" depends="compile.test" description="Runs test">
    <mkdir dir="${tmp.dir}"/>
    <junit>
      <classpath refid="test.class.path"/>
      <formatter type="plain" usefile="false"/>
      <sysproperty key="dk.hippogrif.prettyxml.MainTest.dir" value="${test.dir}"/>
      <sysproperty key="dk.hippogrif.prettyxml.MainTest.tmp" value="${tmp.dir}"/>
      <test name="dk.hippogrif.prettyxml.MainTest"/>
    </junit>
  </target>

  <target name="libs" description="get needed jars to lib and ant/lib">
    <property name="repository" value="http://www.ibiblio.org/maven"/>
    <property name="antlib" value="${env.ANT_HOME}/lib"/>
    <get src="${repository}/junit/jars/junit-3.8.1.jar" dest="${antlib}/junit-3.8.1.jar"/>
    <mkdir dir="${lib.dir}"/>
    <get src="${repository}/commons-cli/jars/commons-cli-1.0.jar" dest="${lib.dir}/commons-cli-1.0.jar"/>
    <get src="${repository}/commons-io/jars/commons-io-1.0.jar" dest="${lib.dir}/commons-io-1.0.jar"/>
    <get src="${repository}/jdom/jars/jdom-1.0.jar" dest="${lib.dir}/jdom-1.0.jar"/>
  </target>

</project>
